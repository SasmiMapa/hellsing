import re
import subprocess

from lib.output.Logger import logger  
from lib.output import Output
from lib.utils.StringUtils import StringUtils

class ExploitOperations:
    def __init__(self):
        pass
    
    #-----------------------------------------------------------------------
    
    def please_exploit_tool(self, command, tool_name, check_name):
         
        try:
            if check_name == "hydra-http-post-form-brute":
                # asking user input whether they want to launch burpesuite or not
                burpsuite_decision = input(f"\033[1m[>] Would you like to launch Burpsuite to get the request string? (Y/n): \033[0m")
                if burpsuite_decision.lower() == 'y':
                    burp_proc = subprocess.run(["burpsuite"])
                else:
                    pass
                
                print("\n")
                logger.info(f"Please provide the necessary inputs for the Hydra brute force:")
                request_header  = input("\033[1m[>] Enter the request header (e.g., /Login.asp?): \033[0m")
                username_field = input("\033[1m[>] Enter the user name field (e.g., username): \033[0m")
                password_field  = input("\033[1m[>] Enter the password field (e.g., password): \033[0m")
                response_string = input("\033[1m[>] Enter the response string for fail logins (e.g., F=Invalid login!): \033[0m")
                    
            # elif check_name == "medusa":
            #     pass
            
            # else:
            #     pass
                
        except Exception as e:
            logger.error(f"Error: {e}")
            
        finally:
            if "[REQUEST_HEADER]" in command:
                command = command.replace("[REQUEST_HEADER]", request_header)
            
            if "[USERNAME_FIELD]" in command:
                command = command.replace("[USERNAME_FIELD]", username_field)
                
            if "[PASSWORD_FIELD]" in command:
                command = command.replace("[PASSWORD_FIELD]", password_field)
                
            if "[RESPONSE_STRING]" in command:
                command = command.replace("[RESPONSE_STRING]", response_string)
            
        return command

    #-----------------------------------------------------------------------
    
    