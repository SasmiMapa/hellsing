# toolbox.conf:
# -------------
# For each tool registered inside toolbox:
#   [tool_name]
#   name           = name to display (mandatory)
#   description    = short text describing the tool (mandatory)
#   target_service = targeted service or "multi" (mandatory)
#   install        = installation command-line (optional)
#   update         = update command-line (optional)
#   check_command  = command to run to check for correct install (usually run tool without args) (optional)
#                    Make sure that this command returns exit code 0 (success) when there is no problem
#					 To test: run command, then echo $?. It appears that some tools actually returns an 
#					 error exit code, even when no problem has occured... (e.g. hydra -h -> 255)

#########################################################################################
# Multi
#########################################################################################
[nmap]
name           = nmap
description    = Nmap port scanner
target_service = multi
install        = sudo apt-get update && sudo apt-get install -y nmap
update         = sudo apt-get update && sudo apt-get install -y --only-upgrade nmap
check_command  = nmap -V

[exploitdb]
name           = exploitdb
description    = Exploit Database repository
target_service = multi
install        = git clone https://github.com/offensive-security/exploitdb.git .
update         = git pull
check_command  = ls -l /usr/share/exploitdb

[metasploit]
name           = metasploit
description    = Metasploit framework
target_service = multi
install        = sudo apt-get update && sudo apt-get install -y metasploit-framework
update         = sudo apt-get update && sudo apt-get install -y --only-upgrade metasploit-framework
check_command  = sudo msfconsole -v

[testssl.sh]
name           = testssl.sh
description    = Test SSL/TLS security encryption of web servers
target_service = multi
install        = git clone https://github.com/drwetter/testssl.sh.git .
update         = git pull
check_command  = ./testssl.sh

[vulners-lookup]
name           = vulners-lookup
description    = Perform vulnerabilities lookup on Vulners.com, largest vuln & exploits database (requires API key)
target_service = multi
virtualenv     = python3
install        = git clone https://github.com/koutto/vulners-lookup.git . && pip3 install -r requirements.txt
update         = git pull && pip3 install -r requirements.txt
check_command  = python3 vulners-lookup.py -h

[cvedetails-lookup]
name           = cvedetails-lookup
description    = Perform vulnerabilities looukp on Cvedetails.com
target_service = multi
virtualenv     = python3
install        = git clone https://github.com/koutto/cvedetails-lookup.git . && pip3 install -r requirements.txt
update         = git pull && pip3 install -r requirements.txt
check_command  = python3 cvedetails-lookup.py -h

[jexboss]
name           = jexboss
description    = Exploitation tool for JBoss, Jenkins, Struts2, JMX (Tomcat)
target_service = multi
install        = git clone https://github.com/joaomatosf/jexboss.git . && pip install -r requires.txt; wget -k https://raw.githubusercontent.com/koutto/jok3r-scripts/master/java-rmi/run-jexboss-jmxtomcat.sh -O run-jexboss-jmxtomcat.sh && chmod +x run-jexboss-jmxtomcat.sh
update         = git pull && pip install -r requires.txt; wget -k https://raw.githubusercontent.com/koutto/jok3r-scripts/master/java-rmi/run-jexboss-jmxtomcat.sh -O run-jexboss-jmxtomcat.sh && chmod +x run-jexboss-jmxtomcat.sh
check_command  = python jexboss.py -h

[hydra]
name           = hydra
description    = Multi-purpose brute-forcer
target_service = multi
install        = sudo apt-get update && sudo apt-get install -y hydra
update         = sudo apt-get update && sudo apt-get install -y --only-upgrade hydra
check_command  = hydra -h; hydra -U http-get

[linPEAS]
name           = linPEAS
description    = Linux Privilege Escalation Awesome Script
target_service = multi
install        = python3 -c "import urllib.request; urllib.request.urlretrieve('https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh', 'linpeas.sh')" && chmod +x linpeas.sh
update         = git pull
check_command  = ./linpeas.sh -h

[LinEnum]
name           = LinEnum
description    = Linux Privilege Escalation Script
target_service = multi
install        = git clone https://github.com/rebootuser/LinEnum.git . && chmod +x LinEnum.sh
update         = git pull
check_command  = ./LinEnum.sh -h

[linux-smart-enumeration]
name           = linux-smart-enumeration
description    = Linux Privilege Escalation Script
target_service = multi
install        = git clone https://github.com/diego-treitos/linux-smart-enumeration.git . && chmod +x lse.sh
update         = git pull
check_command  = ./lse.sh -h

[linux-exploit-suggester-2]
name           = linux-exploit-suggester-2
description    = Linux Privilege Escalation Script
target_service = multi
install        = git clone https://github.com/jondonas/linux-exploit-suggester-2.git .
update         = git pull
check_command  = ./linux-exploit-suggester-2.pl -h

[pwncat]
name           = pwncat
description    = Netcat on steroids with Firewall/IDS/IPS evasion, bind and reverse shell, self-injecting shell and port-knocking techniques
target_service = multi
install        = sudo apt update && sudo apt install pwncat -y
update         = sudo apt update && sudo apt install pwncat -y --only-upgrade pwncat
check_command  = pwncat -h

#########################################################################################
# HTTP
#########################################################################################
[wafw00f]
name           = wafw00f
description    = Identify and fingerprint WAF products protecting a website
target_service = http
install        = git clone https://github.com/EnableSecurity/wafw00f.git . && python setup.py install
update         = git pull && python setup.py install
check_command  = wafw00f -h

[identywaf]
name           = identywaf
description    = Blind WAF identification tool 
target_service = http
install        = git clone https://github.com/stamparm/identYwaf.git .
update         = git pull
check_command  = python3 identYwaf.py -h

[Cloudmare]
name           = Cloudmare
description    = Find the origin servers of websites protected by Cloudflare, Sucuri, or Incapsula with a misconfigured DNS
target_service = http
install        = git clone https://github.com/MrH0wl/Cloudmare.git .
update         = git pull
check_command  = python3 Cloudmare.py -h

[WhatWeb]
name           = WhatWeb
description    = Identify CMS, blogging platforms, JS libraries, Web servers
target_service = http
install        = git clone https://github.com/urbanadventurer/WhatWeb.git . && gem install bundler && bundle install && bundle update
update         = git pull && gem install bundler && bundle install && bundle update
check_command  = ./whatweb -h

[CMSeeK]
name           = CMSeeK
description    = Detect and bruteforce CMS
target_service = http
install        = git clone https://github.com/Tuhinshubhra/CMSeeK.git . && pip install -r requirements.txt
update         = python3 cmseek.py --update
check_command  = python3 cmseek.py -h
    
[drupwn]
name           = drupwn
description    = Fingerprint Drupal 7/8 and exploit CVE
target_service = http
install        = git clone https://github.com/immunIT/drupwn.git . && pip3 install -r requirements.txt 
update         = git pull && pip3 install -r requirements.txt
check_command  = python3 drupwn -h 

[dirhunt]
name           = dirhunt
description    = Find web directories without bruteforce
target_service = http
install        = git clone https://github.com/Nekmo/dirhunt.git . && sudo pip3 install dirhunt && pip3 install --upgrade colorama 
update         = git pull && sudo pip3 install dirhunt && pip3 install --upgrade colorama
check_command  = cd scripts && python3 dirhunt --help 

[Photon]
name           = Photon
description    = Fast we crawler that extracts urls, emails, files, website accounts, etc.
target_service = http
install        = git clone https://github.com/s0md3v/Photon.git . && pip3 install -r requirements.txt
update         = git pull && pip3 install -r requirements.txt
check_command  = python3 photon.py -h

[theHarvester]
name           = theHarvester
description    = Gather emails, subdomains, hosts, employee names, open ports, and banners from different public sources
target_service = http
install        = sudo apt update && sudo apt install -y theharvester
update         = sudo apt update && sudo apt install --only-upgrade theharvester
check_command  = theHarvester -h

[Sublist3r]
name           = Sublist3r
description    = Fast enumerate subdomains of websites using OSINT 
target_service = http
install        = git clone https://github.com/aboul3la/Sublist3r.git . && pip install -r requirements.txt
update         = git pull && pip install -r requirements.txt
check_command  = python3 sublist3r.py -h

[dirsearch]
name           = dirsearch
description    = Web path scanner
target_service = http
install        = git clone https://github.com/maurosoria/dirsearch.git . && pip3 install -r requirements.txt
update         = git pull && pip3 install -r requirements.txt
check_command  = echo "y" | python3 dirsearch.py -h

[web-brutator]
name           = web-brutator
description    = Web interfaces bruteforcer
target_service = http
install        = git clone https://github.com/koutto/web-brutator.git . && pip3 install -r requirements.txt
update         = git pull && pip3 install -r requirements.txt
check_command  = python3 web-brutator.py -h

[h2t]
name     	   = h2t
description    = Checks the website headers and recommends how to make it better
target_service = http
install        = git clone https://github.com/gildasio/h2t.git . && pip3 install -r requirements.txt
update         = git pull && pip3 install -r requirements.txt
check_command  = python3 h2t.py -h

[optionsbleed]
name           = optionsbleed
description    = Test for the Optionsbleed bug in Apache httpd (CVE-2017-9798)
target_service = http
install        = git clone https://github.com/hannob/optionsbleed.git . && chmod +x optionsbleed
update         = git pull && chmod +x optionsbleed
check_command  = ./optionsbleed -h

[IIS-ShortName-Scanner]
name           = IIS-ShortName-Scanner
description    = Scanner for IIS short filename (8.3) disclosure vulnerability
target_service = http
install        = git clone https://github.com/irsdl/IIS-ShortName-Scanner.git .
update         = git pull
check_command  = cd release && java -jar iis_shortname_scanner.jar -h

[CMSmap]
name           = CMSmap
description    = Vulnerability scanner for CMS Wordpress, Drupal, Joomla (requires exploitdb repo)
target_service = http
install        = git clone https://github.com/Dionach/CMSmap.git . && sed -i 's/edbpath/#edbpath/' ./cmsmap/cmsmap.conf && echo "edbpath = [TOOLBOXDIR]/http/exploitdb/" >> ./cmsmap/cmsmap.conf
update         = git pull && python3 cmsmap.py --update PC
check_command  = python3 cmsmap.py -h; python3 cmsmap.py -h | grep 'usage:'

[wpscan]
name           = wpscan
description    = Wordpress vulnerability scanner
target_service = http
install        = git clone https://github.com/wpscanteam/wpscan.git . && gem install bundler && bundle install && rake install && wpscan --update
update         = gem update wpscan && wpscan --update
check_command  = wpscan -h

[WPSeku]
name           = WPSeku
description    = Scans remote WordPress installations to find security issues
target_service = http
install        = git clone https://github.com/andripwn/WPSeku.git . && pip3 install -r requirements.txt
update         = git pull && pip3 install -r requirements.txt
check_command  = python3 wpseku.py

[joomscan]
name           = joomscan
description    = Joomla vulnerability scanner by OWASP
target_service = http
install        = sudo apt update && sudo apt install -y joomscan
update         = sudo apt update && sudo apt install --only-upgrade joomscan
check_command  = joomscan -v

[droopescan]
name           = droopescan
description    = Drupal & Silverstripe plugin-based vulnerability scanner
target_service = http
install        = git clone https://github.com/droope/droopescan.git . && pip install -r requirements.txt
update         = git pull && pip install -r requirements.txt
check_command  = python3 ./droopescan --help

[wapiti]
name           = wapiti
description    = Web application vulnerability scanner
target_service = http
install        = sudo apt update && sudo apt install -y wapiti
update         = sudo apt update && sudo apt install -y --only-upgrade wapiti
check_command  = wapiti -h

[wfuzz]
name           = wfuzz
description    = Web application fuzzer
target_service = http
install        = git clone https://github.com/xmendez/wfuzz.git . && python3 setup.py install && pip3 install pycurl && pip install pycurl
update         = git pull && python3 setup.py install && pip3 install pycurl && pip install pycurl
check_command  = ./wfuzz -h

[ffuf]
name           = ffuf
description    = Fast web fuzzer
target_service = http
install        = echo "y" | echo "y" | git clone https://github.com/ffuf/ffuf.git . && sudo apt install gccgo-go && sudo apt install golang-go && go get -u github.com/ffuf/ffuf && go build
update         = git pull
check_command  = ./ffuf -h

[XSStrike]
name           = XSStrike
description    = Advanced XSS detection suite
target_service = http
install        = git clone https://github.com/s0md3v/XSStrike.git . && pip3 install -r requirements.txt
update         = git pull && pip3 install -r requirements.txt
check_command  = python3 xsstrike.py -h

[nikto]
name           = nikto
description    = Web server scanner
target_service = http
install        = git clone https://github.com/sullo/nikto.git .
update         = git pull
check_command  = cd program; perl ./nikto.pl -h

[JQShell]
name           = JQShell
description    = Exploit arbitrary file upload in jQuery File Upload widget <= 9.22 (CVE-2018-9206)
target_service = http
install        = git clone https://github.com/gunnerstahl/JQShell.git . && pip3 install requests pysocks stem
update         = git pull
check_command  = python3 jqshell.py -h

[struts-pwn-cve2017-9805]
name           = struts-pwn-cve2017-9805
description    = Exploit for Apache Struts2 REST Plugin XStream RCE (CVE-2017-9805)
target_service = http
install        = git clone https://github.com/mazen160/struts-pwn_CVE-2017-9805.git . && pip3 install -r requirements.txt
update         = git pull && pip3 install -r requirements.txt
check_command  = python3 struts-pwn.py -h

[struts-pwn-cve2018-11776]
name           = struts-pwn-cve2018-11776
description    = Exploit for Apache Struts2 RCE CVE-2018-11776
target_service = http
install        = git clone https://github.com/mazen160/struts-pwn_CVE-2018-11776.git . && pip3 install -r requirements.txt
update         = git pull && pip3 install -r requirements.txt
check_command  = python3 struts-pwn.py -h 

[exploit-weblogic-cve2017-3248]
name           = exploit-weblogic-cve2017-3248
description    = Exploit for Weblogic RMI Registry UnicastRef Object Java Deserialization RCE (CVE-2017-3248)
target_service = http
install        = git clone https://github.com/quentinhardy/scriptsAndExploits.git .
update         = git pull
check_command  = python2.7 exploits/weblogic/exploit-CVE-2017-3248-bobsecq.py -h

[commix]
name           = commix
description    = Automates the detection and exploitation of command injection vulnerabilities
target_service = http
install        = git clone https://github.com/commixproject/commix.git . 
update         = git pull
check_command  = python3 commix.py -h

[sqlmap]
name           = sqlmap
description    = Automatic SQL injection and database takeover tool
target_service = http
install        = git clone https://github.com/sqlmapproject/sqlmap.git .
update         = git pull
check_command  = python3 sqlmap.py -h

[domi-owned]
name           = domi-owned
description    = Fingerprint/Exploit IBM/Lotus Domino servers
target_service = http
install        = git clone https://github.com/coldfusion39/domi-owned.git . && pip3 install -r requirements.txt
update         = git pull && pip3 install -r requirements.txt
check_command  = python3 domi-owned.py -h

[clusterd]
name           = clusterd
description    = Application server attack toolkit (JBoss, ColdFusion, Weblogic, Tomcat, Railo, Axis2, Glassfish)
target_service = http
install        = git clone https://github.com/koutto/clusterd.git . && pip install -r requirements.txt
update         = git pull && pip install -r requirements.txt
check_command  = python2.7 ./clusterd.py -h

[wpforce]
name           = wpforce
description    = Wordpress attack suite
target_service = http
install        = git clone https://github.com/n00py/WPForce.git .
update         = git pull
check_command  = python2.7 yertle.py -h



























