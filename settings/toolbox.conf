# toolbox.conf:
# -------------
# For each tool registered inside toolbox:
#   [tool_name]
#   name           = name to display (mandatory)
#   description    = short text describing the tool (mandatory)
#   target_service = targeted service or "multi" (mandatory)
#   install        = installation command-line (optional)
#   update         = update command-line (optional)
#   check_command  = command to run to check for correct install (usually run tool without args) (optional)
#                    Make sure that this command returns exit code 0 (success) when there is no problem
#					 To test: run command, then echo $?. It appears that some tools actually returns an 
#					 error exit code, even when no problem has occured... (e.g. hydra -h -> 255)

#########################################################################################
# Multi
#########################################################################################










#########################################################################################
# HTTP
#########################################################################################
[wafw00f]
name           = wafw00f
description    = Identify and fingerprint WAF products protecting a website
target_service = http
virtualenv     = python3
install        = git clone https://github.com/EnableSecurity/wafw00f.git . && python setup.py install
update         = git pull && python setup.py install
check_command  = wafw00f -h

[identywaf]
name           = identywaf
description    = Blind WAF identification tool 
target_service = http
virtualenv     = python3
install        = git clone https://github.com/stamparm/identYwaf.git .
update         = git pull
check_command  = python3 identYwaf.py -h

[Cloudmare]
name           = Cloudmare
description    = Find the origin servers of websites protected by Cloudflare, Sucuri, or Incapsula with a misconfigured DNS
target_service = http
virtualenv     = python3
install        = git clone https://github.com/MrH0wl/Cloudmare.git .
update         = git pull
check_command  = python3 Cloudmare.py -h

[WhatWeb]
name           = WhatWeb
description    = Identify CMS, blogging platforms, JS libraries, Web servers
target_service = http
virtualenv     = python3
install        = git clone https://github.com/urbanadventurer/WhatWeb.git . && gem install bundler && bundle install && bundle update
update         = git pull && gem install bundler && bundle install && bundle update
check_command  = ruby -v

[CMSeeK]
name           = CMSeeK
description    = CMS Detection and Exploitation suite - Scan WordPress, Joomla, Drupal and over 180 other CMSs
target_service = http
virtualenv     = python3
install        = git clone https://github.com/Tuhinshubhra/CMSeeK.git . && pip3 install -r requirements.txt
update         = git pull && python3 cmseek.py --update
check_command  = python3 cmseek.py -h



    
